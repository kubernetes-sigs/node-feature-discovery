/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "sigs.k8s.io/node-feature-discovery/api/nfd/v1alpha1"
)

// NodeFeatureWorkerConfigLister helps list NodeFeatureWorkerConfigs.
// All objects returned here must be treated as read-only.
type NodeFeatureWorkerConfigLister interface {
	// List lists all NodeFeatureWorkerConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NodeFeatureWorkerConfig, err error)
	// NodeFeatureWorkerConfigs returns an object that can list and get NodeFeatureWorkerConfigs.
	NodeFeatureWorkerConfigs(namespace string) NodeFeatureWorkerConfigNamespaceLister
	NodeFeatureWorkerConfigListerExpansion
}

// nodeFeatureWorkerConfigLister implements the NodeFeatureWorkerConfigLister interface.
type nodeFeatureWorkerConfigLister struct {
	listers.ResourceIndexer[*v1alpha1.NodeFeatureWorkerConfig]
}

// NewNodeFeatureWorkerConfigLister returns a new NodeFeatureWorkerConfigLister.
func NewNodeFeatureWorkerConfigLister(indexer cache.Indexer) NodeFeatureWorkerConfigLister {
	return &nodeFeatureWorkerConfigLister{listers.New[*v1alpha1.NodeFeatureWorkerConfig](indexer, v1alpha1.Resource("nodefeatureworkerconfig"))}
}

// NodeFeatureWorkerConfigs returns an object that can list and get NodeFeatureWorkerConfigs.
func (s *nodeFeatureWorkerConfigLister) NodeFeatureWorkerConfigs(namespace string) NodeFeatureWorkerConfigNamespaceLister {
	return nodeFeatureWorkerConfigNamespaceLister{listers.NewNamespaced[*v1alpha1.NodeFeatureWorkerConfig](s.ResourceIndexer, namespace)}
}

// NodeFeatureWorkerConfigNamespaceLister helps list and get NodeFeatureWorkerConfigs.
// All objects returned here must be treated as read-only.
type NodeFeatureWorkerConfigNamespaceLister interface {
	// List lists all NodeFeatureWorkerConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NodeFeatureWorkerConfig, err error)
	// Get retrieves the NodeFeatureWorkerConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NodeFeatureWorkerConfig, error)
	NodeFeatureWorkerConfigNamespaceListerExpansion
}

// nodeFeatureWorkerConfigNamespaceLister implements the NodeFeatureWorkerConfigNamespaceLister
// interface.
type nodeFeatureWorkerConfigNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.NodeFeatureWorkerConfig]
}
